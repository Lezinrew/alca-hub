name: Android Dev Build

on:
  pull_request:
    branches: [develop, main]
    paths:
      - 'mobile/android/**'
      - 'frontend/src/**'
      - '.github/workflows/android-dev.yml'

jobs:
  build-dev:
    name: Build Android Dev
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x mobile/android/gradlew

      - name: Build Dev Debug APK
        run: |
          cd mobile/android
          ./gradlew assembleDevDebug --stacktrace

      - name: Run Unit Tests
        run: |
          cd mobile/android
          ./gradlew testDevDebugUnitTest

      - name: Run Lint
        run: |
          cd mobile/android
          ./gradlew lintDevDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-dev-debug-${{ github.run_number }}
          path: mobile/android/app/build/outputs/apk/dev/debug/app-dev-debug.apk
          retention-days: 7

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_number }}
          path: mobile/android/app/build/test-results/
          retention-days: 7

      - name: Comment PR with APK
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const apkPath = 'mobile/android/app/build/outputs/apk/dev/debug/app-dev-debug.apk';

            if (fs.existsSync(apkPath)) {
              const apkSize = fs.statSync(apkPath).size;
              const apkSizeMB = (apkSize / 1024 / 1024).toFixed(2);

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `âœ… **Android Dev Build Successful**\n\n` +
                      `ðŸ“¦ APK Size: ${apkSizeMB} MB\n` +
                      `ðŸ“± Variant: devDebug\n` +
                      `ðŸ”— Download: [Artifacts](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})\n\n` +
                      `Build #${context.runNumber}`
              });
            }
