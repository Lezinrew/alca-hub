# Docker Compose para Produção - Alça Hub
# Configuração otimizada para VPS

version: '3.8'

services:
  # Banco de dados MongoDB
  mongo:
    image: mongo:latest
    container_name: alca-hub-mongo-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data_prod:/data/db
      - mongo_config_prod:/data/configdb
    networks:
      - alca-hub-prod-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: alca-hub-backend-prod
    restart: unless-stopped
    environment:
      - MONGO_URL=mongodb://mongo:27017
      - DB_NAME=${MONGO_DATABASE}
      - SECRET_KEY=${SECRET_KEY}
      - MERCADO_PAGO_ACCESS_TOKEN=${MERCADO_PAGO_ACCESS_TOKEN}
      - MERCADO_PAGO_PUBLIC_KEY=${MERCADO_PAGO_PUBLIC_KEY}
      - WEBHOOK_SECRET=${WEBHOOK_SECRET}
      - CORS_ORIGINS=${CORS_ORIGINS}
      - DEBUG=${DEBUG:-0}
      - ENV=${ENV:-production}
    ports:
      - "8000:8000"
    volumes:
      - backend_logs_prod:/app/logs
    networks:
      - alca-hub-prod-network
    depends_on:
      mongo:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: alca-hub-frontend-prod
    restart: unless-stopped
    environment:
      - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL}
      - NODE_ENV=production
    ports:
      - "3000:3000"
    networks:
      - alca-hub-prod-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Nginx (Proxy Reverso)
  nginx:
    image: nginx:alpine
    container_name: alca-hub-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - alca-hub-prod-network
    depends_on:
      - frontend
      - backend
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

# Volumes para produção
volumes:
  mongo_data_prod:
    driver: local
  mongo_config_prod:
    driver: local
  backend_logs_prod:
    driver: local

# Network para produção
networks:
  alca-hub-prod-network:
    driver: bridge
    name: alca-hub-prod-network